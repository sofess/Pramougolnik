using System;

class Rectangle
{
    public double X, Y, Width, Height;

    // Конструкторы
    public Rectangle(double x, double y, double width, double height)
    {
        X = x; Y = y;
        Width = width;
        Height = height;
    }

    public Rectangle() : this(0, 0, 1, 1) { }

    // Деструктор
    ~Rectangle()
    {
        Console.WriteLine("Rectangle уничтожен");
    }

    // Перегрузка оператора * (пересечение)
    public static Rectangle operator *(Rectangle a, Rectangle b)
    {
        double x1 = Math.Max(a.X, b.X);
        double y1 = Math.Max(a.Y, b.Y);
        double x2 = Math.Min(a.X + a.Width, b.X + b.Width);
        double y2 = Math.Min(a.Y + a.Height, b.Y + b.Height);

        if (x2 > x1 && y2 > y1)
            return new Rectangle(x1, y1, x2 - x1, y2 - y1);
        else
            return new Rectangle(0, 0, 0, 0); // Нет пересечения
    }

    // Вычисление площади
    public double Area() => Width * Height;

    // Перегрузка сравнения (по площади)
    public static bool operator >(Rectangle a, Rectangle b) => a.Area() > b.Area();
    public static bool operator <(Rectangle a, Rectangle b) => a.Area() < b.Area();
    public static bool operator ==(Rectangle a, Rectangle b) => a.Area() == b.Area();
    public static bool operator !=(Rectangle a, Rectangle b) => !(a == b);

    public override bool Equals(object obj)
    {
        if (obj is Rectangle r)
            return this == r;
        return false;
    }

    public override int GetHashCode() => Area().GetHashCode();

    // Преобразование в строку
    public override string ToString()
    {
        return $"({X}, {Y}, {Width}, {Height})";
    }

    // Получение объекта из строки
    public static Rectangle Parse(string str)
    {
        // Ожидается формат: (x, y, w, h)
        str = str.Replace("(", "").Replace(")", "");
        var parts = str.Split(',');
        if (parts.Length != 4) throw new FormatException("Неверный формат строки");

        double x = double.Parse(parts[0]);
        double y = double.Parse(parts[1]);
        double w = double.Parse(parts[2]);
        double h = double.Parse(parts[3]);

        return new Rectangle(x, y, w, h);
    }
}
